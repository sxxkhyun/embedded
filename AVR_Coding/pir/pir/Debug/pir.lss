
pir.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800100  0000089c  00000930  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000089c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800134  00800134  00000964  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000964  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00000a00  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c40  00000000  00000000  00000a78  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009f3  00000000  00000000  000016b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004ad  00000000  00000000  000020ab  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000174  00000000  00000000  00002558  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004e4  00000000  00000000  000026cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000046c  00000000  00000000  00002bb0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  0000301c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	43 c0       	rjmp	.+134    	; 0xc8 <__vector_16>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e9       	ldi	r30, 0x9C	; 156
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 33       	cpi	r26, 0x34	; 52
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e3       	ldi	r26, 0x34	; 52
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 34       	cpi	r26, 0x40	; 64
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	71 d0       	rcall	.+226    	; 0x1a6 <main>
  c4:	e9 c3       	rjmp	.+2002   	; 0x898 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <__vector_16>:
// 프로그램 시작 이후의 경과 시간
volatile unsigned long timer0_millis = 0;
volatile int timer0_micros = 0;

ISR(TIMER0_OVF_vect)	// 오버플로 인터럽트
{
  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	0b b6       	in	r0, 0x3b	; 59
  d4:	0f 92       	push	r0
  d6:	cf 92       	push	r12
  d8:	df 92       	push	r13
  da:	ef 92       	push	r14
  dc:	ff 92       	push	r15
  de:	0f 93       	push	r16
  e0:	1f 93       	push	r17
  e2:	2f 93       	push	r18
  e4:	3f 93       	push	r19
  e6:	4f 93       	push	r20
  e8:	5f 93       	push	r21
  ea:	6f 93       	push	r22
  ec:	7f 93       	push	r23
  ee:	8f 93       	push	r24
  f0:	9f 93       	push	r25
  f2:	af 93       	push	r26
  f4:	bf 93       	push	r27
  f6:	ef 93       	push	r30
  f8:	ff 93       	push	r31
	unsigned long m = timer0_millis;
  fa:	c0 90 36 01 	lds	r12, 0x0136	; 0x800136 <timer0_millis>
  fe:	d0 90 37 01 	lds	r13, 0x0137	; 0x800137 <timer0_millis+0x1>
 102:	e0 90 38 01 	lds	r14, 0x0138	; 0x800138 <timer0_millis+0x2>
 106:	f0 90 39 01 	lds	r15, 0x0139	; 0x800139 <timer0_millis+0x3>
	int f = timer0_micros;
 10a:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
 10e:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
	m += MILLIS_INCREMENT_PER_OVERFLOW;	// 밀리초 단위 시간 증가
 112:	97 01       	movw	r18, r14
 114:	86 01       	movw	r16, r12
 116:	0f 5f       	subi	r16, 0xFF	; 255
 118:	1f 4f       	sbci	r17, 0xFF	; 255
 11a:	2f 4f       	sbci	r18, 0xFF	; 255
 11c:	3f 4f       	sbci	r19, 0xFF	; 255
	f += MICROS_INCREMENT_PER_OVERFLOW;	// 마이크로초 단위 시간 증가
	
	// 마이크로초가 1,000을 넘어가면 밀리초를 증가시킴
	m += (f/1000);
 11e:	48 96       	adiw	r24, 0x18	; 24
 120:	68 ee       	ldi	r22, 0xE8	; 232
 122:	73 e0       	ldi	r23, 0x03	; 3
 124:	b0 d0       	rcall	.+352    	; 0x286 <__divmodhi4>
 126:	6b 01       	movw	r12, r22
 128:	77 0f       	add	r23, r23
 12a:	ee 08       	sbc	r14, r14
 12c:	ff 08       	sbc	r15, r15
 12e:	c0 0e       	add	r12, r16
 130:	d1 1e       	adc	r13, r17
 132:	e2 1e       	adc	r14, r18
 134:	f3 1e       	adc	r15, r19
	f = m % 1000;
 136:	c7 01       	movw	r24, r14
 138:	b6 01       	movw	r22, r12
 13a:	28 ee       	ldi	r18, 0xE8	; 232
 13c:	33 e0       	ldi	r19, 0x03	; 3
 13e:	40 e0       	ldi	r20, 0x00	; 0
 140:	50 e0       	ldi	r21, 0x00	; 0
 142:	b4 d0       	rcall	.+360    	; 0x2ac <__udivmodsi4>
	
	timer0_millis = m;
 144:	c0 92 36 01 	sts	0x0136, r12	; 0x800136 <timer0_millis>
 148:	d0 92 37 01 	sts	0x0137, r13	; 0x800137 <timer0_millis+0x1>
 14c:	e0 92 38 01 	sts	0x0138, r14	; 0x800138 <timer0_millis+0x2>
 150:	f0 92 39 01 	sts	0x0139, r15	; 0x800139 <timer0_millis+0x3>
	timer0_micros = f;
 154:	70 93 35 01 	sts	0x0135, r23	; 0x800135 <__data_end+0x1>
 158:	60 93 34 01 	sts	0x0134, r22	; 0x800134 <__data_end>
}
 15c:	ff 91       	pop	r31
 15e:	ef 91       	pop	r30
 160:	bf 91       	pop	r27
 162:	af 91       	pop	r26
 164:	9f 91       	pop	r25
 166:	8f 91       	pop	r24
 168:	7f 91       	pop	r23
 16a:	6f 91       	pop	r22
 16c:	5f 91       	pop	r21
 16e:	4f 91       	pop	r20
 170:	3f 91       	pop	r19
 172:	2f 91       	pop	r18
 174:	1f 91       	pop	r17
 176:	0f 91       	pop	r16
 178:	ff 90       	pop	r15
 17a:	ef 90       	pop	r14
 17c:	df 90       	pop	r13
 17e:	cf 90       	pop	r12
 180:	0f 90       	pop	r0
 182:	0b be       	out	0x3b, r0	; 59
 184:	0f 90       	pop	r0
 186:	0f be       	out	0x3f, r0	; 63
 188:	0f 90       	pop	r0
 18a:	1f 90       	pop	r1
 18c:	18 95       	reti

0000018e <millis>:

unsigned long millis()
{
	unsigned long m;
	uint8_t oldSREG = SREG;	// 상태 레지스터 값 저장
 18e:	2f b7       	in	r18, 0x3f	; 63
	
	cli();		// timer0_millis 값을 읽는 동안 값이 변하지 않도록 인터럽트 비활성화
 190:	f8 94       	cli
	
	m = timer0_millis;
 192:	60 91 36 01 	lds	r22, 0x0136	; 0x800136 <timer0_millis>
 196:	70 91 37 01 	lds	r23, 0x0137	; 0x800137 <timer0_millis+0x1>
 19a:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <timer0_millis+0x2>
 19e:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <timer0_millis+0x3>
	
	SREG = oldSREG;		// 이전 상태 레지스터 값 복원
 1a2:	2f bf       	out	0x3f, r18	; 63
	
	return m;			// 프로그램 시작 후 경과 시간
}
 1a4:	08 95       	ret

000001a6 <main>:

int main(void)
{
	UART1_init();
 1a6:	4f d0       	rcall	.+158    	; 0x246 <UART1_init>
	stdout = &OUTPUT;
 1a8:	80 e0       	ldi	r24, 0x00	; 0
 1aa:	91 e0       	ldi	r25, 0x01	; 1
 1ac:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <__iob+0x3>
 1b0:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <__iob+0x2>
	DDRF &= ~0x01;
 1b4:	e1 e6       	ldi	r30, 0x61	; 97
 1b6:	f0 e0       	ldi	r31, 0x00	; 0
 1b8:	80 81       	ld	r24, Z
 1ba:	8e 7f       	andi	r24, 0xFE	; 254
 1bc:	80 83       	st	Z, r24
	
	TCCR0 |= (1 << CS02);	//분주비를 64로 설정
 1be:	83 b7       	in	r24, 0x33	; 51
 1c0:	84 60       	ori	r24, 0x04	; 4
 1c2:	83 bf       	out	0x33, r24	; 51
	TIMSK |= (1 << TOIE0);	// 오버플로 인터럽트 허용
 1c4:	87 b7       	in	r24, 0x37	; 55
 1c6:	81 60       	ori	r24, 0x01	; 1
 1c8:	87 bf       	out	0x37, r24	; 55
	sei();				// 전역적으로 인터럽트 허용
	
	int current_pirstate, previous_pirstate;
	unsigned long time_previous, time_current;
	
	time_previous = millis();		// 시작 시간
 1ca:	78 94       	sei
 1cc:	e0 df       	rcall	.-64     	; 0x18e <millis>
 1ce:	4b 01       	movw	r8, r22
 1d0:	5c 01       	movw	r10, r24
	previous_pirstate = (PINF & 0x01);
 1d2:	80 b1       	in	r24, 0x00	; 0
 1d4:	08 2f       	mov	r16, r24
 1d6:	01 70       	andi	r16, 0x01	; 1
 1d8:	10 e0       	ldi	r17, 0x00	; 0
			{
				printf("Motion detected!!\n\r");
			}
			else
			{
				printf("Motion ended!!\n\r");
 1da:	0f 2e       	mov	r0, r31
 1dc:	f2 e2       	ldi	r31, 0x22	; 34
 1de:	6f 2e       	mov	r6, r31
 1e0:	f1 e0       	ldi	r31, 0x01	; 1
 1e2:	7f 2e       	mov	r7, r31
 1e4:	f0 2d       	mov	r31, r0
		{
			time_previous = time_current;
			previous_pirstate = current_pirstate;
			if(current_pirstate)
			{
				printf("Motion detected!!\n\r");
 1e6:	0f 2e       	mov	r0, r31
 1e8:	fe e0       	ldi	r31, 0x0E	; 14
 1ea:	4f 2e       	mov	r4, r31
 1ec:	f1 e0       	ldi	r31, 0x01	; 1
 1ee:	5f 2e       	mov	r5, r31
	time_previous = millis();		// 시작 시간
	previous_pirstate = (PINF & 0x01);

	while (1)
	{
		time_current = millis();		// 현재 시간
 1f0:	f0 2d       	mov	r31, r0
 1f2:	cd df       	rcall	.-102    	; 0x18e <millis>
 1f4:	6b 01       	movw	r12, r22
 1f6:	7c 01       	movw	r14, r24
		current_pirstate = (PINF & 0x01);
 1f8:	80 b1       	in	r24, 0x00	; 0
 1fa:	81 70       	andi	r24, 0x01	; 1
 1fc:	c8 2f       	mov	r28, r24
 1fe:	20 e0       	ldi	r18, 0x00	; 0
 200:	d2 2f       	mov	r29, r18
		if((previous_pirstate != current_pirstate) || ((time_current - time_previous) > 5000))
 202:	0c 17       	cp	r16, r28
 204:	1d 07       	cpc	r17, r29
 206:	59 f4       	brne	.+22     	; 0x21e <main+0x78>
 208:	d7 01       	movw	r26, r14
 20a:	c6 01       	movw	r24, r12
 20c:	88 19       	sub	r24, r8
 20e:	99 09       	sbc	r25, r9
 210:	aa 09       	sbc	r26, r10
 212:	bb 09       	sbc	r27, r11
 214:	89 38       	cpi	r24, 0x89	; 137
 216:	93 41       	sbci	r25, 0x13	; 19
 218:	a1 05       	cpc	r26, r1
 21a:	b1 05       	cpc	r27, r1
 21c:	50 f3       	brcs	.-44     	; 0x1f2 <main+0x4c>
		{
			time_previous = time_current;
			previous_pirstate = current_pirstate;
			if(current_pirstate)
 21e:	20 97       	sbiw	r28, 0x00	; 0
			{
				printf("Motion detected!!\n\r");
 220:	49 f0       	breq	.+18     	; 0x234 <main+0x8e>
 222:	5f 92       	push	r5
 224:	4f 92       	push	r4
 226:	78 d0       	rcall	.+240    	; 0x318 <printf>
 228:	0f 90       	pop	r0
 22a:	0f 90       	pop	r0
	{
		time_current = millis();		// 현재 시간
		current_pirstate = (PINF & 0x01);
		if((previous_pirstate != current_pirstate) || ((time_current - time_previous) > 5000))
		{
			time_previous = time_current;
 22c:	46 01       	movw	r8, r12
 22e:	57 01       	movw	r10, r14
			previous_pirstate = current_pirstate;
 230:	8e 01       	movw	r16, r28
			{
				printf("Motion detected!!\n\r");
			}
			else
			{
				printf("Motion ended!!\n\r");
 232:	df cf       	rjmp	.-66     	; 0x1f2 <main+0x4c>
 234:	7f 92       	push	r7
 236:	6f 92       	push	r6
 238:	6f d0       	rcall	.+222    	; 0x318 <printf>
 23a:	0f 90       	pop	r0
 23c:	0f 90       	pop	r0
	{
		time_current = millis();		// 현재 시간
		current_pirstate = (PINF & 0x01);
		if((previous_pirstate != current_pirstate) || ((time_current - time_previous) > 5000))
		{
			time_previous = time_current;
 23e:	46 01       	movw	r8, r12
 240:	57 01       	movw	r10, r14
			previous_pirstate = current_pirstate;
 242:	8e 01       	movw	r16, r28
 244:	d6 cf       	rjmp	.-84     	; 0x1f2 <main+0x4c>

00000246 <UART1_init>:
#include <stdio.h>

void UART1_init(void)
{
	
	UBRR1H = 0x00;
 246:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
	UBRR1L = 207;
 24a:	8f ec       	ldi	r24, 0xCF	; 207
 24c:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
	
	UCSR1A |= _BV(U2X1);
 250:	eb e9       	ldi	r30, 0x9B	; 155
 252:	f0 e0       	ldi	r31, 0x00	; 0
 254:	80 81       	ld	r24, Z
 256:	82 60       	ori	r24, 0x02	; 2
 258:	80 83       	st	Z, r24
	UCSR1C |= 0x06;
 25a:	ed e9       	ldi	r30, 0x9D	; 157
 25c:	f0 e0       	ldi	r31, 0x00	; 0
 25e:	80 81       	ld	r24, Z
 260:	86 60       	ori	r24, 0x06	; 6
 262:	80 83       	st	Z, r24
	
	UCSR1B |= _BV(RXEN1);
 264:	ea e9       	ldi	r30, 0x9A	; 154
 266:	f0 e0       	ldi	r31, 0x00	; 0
 268:	80 81       	ld	r24, Z
 26a:	80 61       	ori	r24, 0x10	; 16
 26c:	80 83       	st	Z, r24
	UCSR1B |= _BV(TXEN1);
 26e:	80 81       	ld	r24, Z
 270:	88 60       	ori	r24, 0x08	; 8
 272:	80 83       	st	Z, r24
 274:	08 95       	ret

00000276 <UART1_transmit>:
}

void UART1_transmit(char data)
{
	
	while( !(UCSR1A & (1 << UDRE1)) );
 276:	eb e9       	ldi	r30, 0x9B	; 155
 278:	f0 e0       	ldi	r31, 0x00	; 0
 27a:	90 81       	ld	r25, Z
 27c:	95 ff       	sbrs	r25, 5
 27e:	fd cf       	rjmp	.-6      	; 0x27a <UART1_transmit+0x4>
	UDR1 = data;
 280:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 284:	08 95       	ret

00000286 <__divmodhi4>:
 286:	97 fb       	bst	r25, 7
 288:	07 2e       	mov	r0, r23
 28a:	16 f4       	brtc	.+4      	; 0x290 <__divmodhi4+0xa>
 28c:	00 94       	com	r0
 28e:	06 d0       	rcall	.+12     	; 0x29c <__divmodhi4_neg1>
 290:	77 fd       	sbrc	r23, 7
 292:	08 d0       	rcall	.+16     	; 0x2a4 <__divmodhi4_neg2>
 294:	2d d0       	rcall	.+90     	; 0x2f0 <__udivmodhi4>
 296:	07 fc       	sbrc	r0, 7
 298:	05 d0       	rcall	.+10     	; 0x2a4 <__divmodhi4_neg2>
 29a:	3e f4       	brtc	.+14     	; 0x2aa <__divmodhi4_exit>

0000029c <__divmodhi4_neg1>:
 29c:	90 95       	com	r25
 29e:	81 95       	neg	r24
 2a0:	9f 4f       	sbci	r25, 0xFF	; 255
 2a2:	08 95       	ret

000002a4 <__divmodhi4_neg2>:
 2a4:	70 95       	com	r23
 2a6:	61 95       	neg	r22
 2a8:	7f 4f       	sbci	r23, 0xFF	; 255

000002aa <__divmodhi4_exit>:
 2aa:	08 95       	ret

000002ac <__udivmodsi4>:
 2ac:	a1 e2       	ldi	r26, 0x21	; 33
 2ae:	1a 2e       	mov	r1, r26
 2b0:	aa 1b       	sub	r26, r26
 2b2:	bb 1b       	sub	r27, r27
 2b4:	fd 01       	movw	r30, r26
 2b6:	0d c0       	rjmp	.+26     	; 0x2d2 <__udivmodsi4_ep>

000002b8 <__udivmodsi4_loop>:
 2b8:	aa 1f       	adc	r26, r26
 2ba:	bb 1f       	adc	r27, r27
 2bc:	ee 1f       	adc	r30, r30
 2be:	ff 1f       	adc	r31, r31
 2c0:	a2 17       	cp	r26, r18
 2c2:	b3 07       	cpc	r27, r19
 2c4:	e4 07       	cpc	r30, r20
 2c6:	f5 07       	cpc	r31, r21
 2c8:	20 f0       	brcs	.+8      	; 0x2d2 <__udivmodsi4_ep>
 2ca:	a2 1b       	sub	r26, r18
 2cc:	b3 0b       	sbc	r27, r19
 2ce:	e4 0b       	sbc	r30, r20
 2d0:	f5 0b       	sbc	r31, r21

000002d2 <__udivmodsi4_ep>:
 2d2:	66 1f       	adc	r22, r22
 2d4:	77 1f       	adc	r23, r23
 2d6:	88 1f       	adc	r24, r24
 2d8:	99 1f       	adc	r25, r25
 2da:	1a 94       	dec	r1
 2dc:	69 f7       	brne	.-38     	; 0x2b8 <__udivmodsi4_loop>
 2de:	60 95       	com	r22
 2e0:	70 95       	com	r23
 2e2:	80 95       	com	r24
 2e4:	90 95       	com	r25
 2e6:	9b 01       	movw	r18, r22
 2e8:	ac 01       	movw	r20, r24
 2ea:	bd 01       	movw	r22, r26
 2ec:	cf 01       	movw	r24, r30
 2ee:	08 95       	ret

000002f0 <__udivmodhi4>:
 2f0:	aa 1b       	sub	r26, r26
 2f2:	bb 1b       	sub	r27, r27
 2f4:	51 e1       	ldi	r21, 0x11	; 17
 2f6:	07 c0       	rjmp	.+14     	; 0x306 <__udivmodhi4_ep>

000002f8 <__udivmodhi4_loop>:
 2f8:	aa 1f       	adc	r26, r26
 2fa:	bb 1f       	adc	r27, r27
 2fc:	a6 17       	cp	r26, r22
 2fe:	b7 07       	cpc	r27, r23
 300:	10 f0       	brcs	.+4      	; 0x306 <__udivmodhi4_ep>
 302:	a6 1b       	sub	r26, r22
 304:	b7 0b       	sbc	r27, r23

00000306 <__udivmodhi4_ep>:
 306:	88 1f       	adc	r24, r24
 308:	99 1f       	adc	r25, r25
 30a:	5a 95       	dec	r21
 30c:	a9 f7       	brne	.-22     	; 0x2f8 <__udivmodhi4_loop>
 30e:	80 95       	com	r24
 310:	90 95       	com	r25
 312:	bc 01       	movw	r22, r24
 314:	cd 01       	movw	r24, r26
 316:	08 95       	ret

00000318 <printf>:
 318:	cf 93       	push	r28
 31a:	df 93       	push	r29
 31c:	cd b7       	in	r28, 0x3d	; 61
 31e:	de b7       	in	r29, 0x3e	; 62
 320:	ae 01       	movw	r20, r28
 322:	4b 5f       	subi	r20, 0xFB	; 251
 324:	5f 4f       	sbci	r21, 0xFF	; 255
 326:	fa 01       	movw	r30, r20
 328:	61 91       	ld	r22, Z+
 32a:	71 91       	ld	r23, Z+
 32c:	af 01       	movw	r20, r30
 32e:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <__iob+0x2>
 332:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <__iob+0x3>
 336:	03 d0       	rcall	.+6      	; 0x33e <vfprintf>
 338:	df 91       	pop	r29
 33a:	cf 91       	pop	r28
 33c:	08 95       	ret

0000033e <vfprintf>:
 33e:	2f 92       	push	r2
 340:	3f 92       	push	r3
 342:	4f 92       	push	r4
 344:	5f 92       	push	r5
 346:	6f 92       	push	r6
 348:	7f 92       	push	r7
 34a:	8f 92       	push	r8
 34c:	9f 92       	push	r9
 34e:	af 92       	push	r10
 350:	bf 92       	push	r11
 352:	cf 92       	push	r12
 354:	df 92       	push	r13
 356:	ef 92       	push	r14
 358:	ff 92       	push	r15
 35a:	0f 93       	push	r16
 35c:	1f 93       	push	r17
 35e:	cf 93       	push	r28
 360:	df 93       	push	r29
 362:	cd b7       	in	r28, 0x3d	; 61
 364:	de b7       	in	r29, 0x3e	; 62
 366:	2b 97       	sbiw	r28, 0x0b	; 11
 368:	0f b6       	in	r0, 0x3f	; 63
 36a:	f8 94       	cli
 36c:	de bf       	out	0x3e, r29	; 62
 36e:	0f be       	out	0x3f, r0	; 63
 370:	cd bf       	out	0x3d, r28	; 61
 372:	6c 01       	movw	r12, r24
 374:	7b 01       	movw	r14, r22
 376:	8a 01       	movw	r16, r20
 378:	fc 01       	movw	r30, r24
 37a:	17 82       	std	Z+7, r1	; 0x07
 37c:	16 82       	std	Z+6, r1	; 0x06
 37e:	83 81       	ldd	r24, Z+3	; 0x03
 380:	81 ff       	sbrs	r24, 1
 382:	bf c1       	rjmp	.+894    	; 0x702 <__LOCK_REGION_LENGTH__+0x302>
 384:	ce 01       	movw	r24, r28
 386:	01 96       	adiw	r24, 0x01	; 1
 388:	3c 01       	movw	r6, r24
 38a:	f6 01       	movw	r30, r12
 38c:	93 81       	ldd	r25, Z+3	; 0x03
 38e:	f7 01       	movw	r30, r14
 390:	93 fd       	sbrc	r25, 3
 392:	85 91       	lpm	r24, Z+
 394:	93 ff       	sbrs	r25, 3
 396:	81 91       	ld	r24, Z+
 398:	7f 01       	movw	r14, r30
 39a:	88 23       	and	r24, r24
 39c:	09 f4       	brne	.+2      	; 0x3a0 <vfprintf+0x62>
 39e:	ad c1       	rjmp	.+858    	; 0x6fa <__LOCK_REGION_LENGTH__+0x2fa>
 3a0:	85 32       	cpi	r24, 0x25	; 37
 3a2:	39 f4       	brne	.+14     	; 0x3b2 <vfprintf+0x74>
 3a4:	93 fd       	sbrc	r25, 3
 3a6:	85 91       	lpm	r24, Z+
 3a8:	93 ff       	sbrs	r25, 3
 3aa:	81 91       	ld	r24, Z+
 3ac:	7f 01       	movw	r14, r30
 3ae:	85 32       	cpi	r24, 0x25	; 37
 3b0:	21 f4       	brne	.+8      	; 0x3ba <vfprintf+0x7c>
 3b2:	b6 01       	movw	r22, r12
 3b4:	90 e0       	ldi	r25, 0x00	; 0
 3b6:	d6 d1       	rcall	.+940    	; 0x764 <fputc>
 3b8:	e8 cf       	rjmp	.-48     	; 0x38a <vfprintf+0x4c>
 3ba:	91 2c       	mov	r9, r1
 3bc:	21 2c       	mov	r2, r1
 3be:	31 2c       	mov	r3, r1
 3c0:	ff e1       	ldi	r31, 0x1F	; 31
 3c2:	f3 15       	cp	r31, r3
 3c4:	d8 f0       	brcs	.+54     	; 0x3fc <vfprintf+0xbe>
 3c6:	8b 32       	cpi	r24, 0x2B	; 43
 3c8:	79 f0       	breq	.+30     	; 0x3e8 <vfprintf+0xaa>
 3ca:	38 f4       	brcc	.+14     	; 0x3da <vfprintf+0x9c>
 3cc:	80 32       	cpi	r24, 0x20	; 32
 3ce:	79 f0       	breq	.+30     	; 0x3ee <vfprintf+0xb0>
 3d0:	83 32       	cpi	r24, 0x23	; 35
 3d2:	a1 f4       	brne	.+40     	; 0x3fc <vfprintf+0xbe>
 3d4:	23 2d       	mov	r18, r3
 3d6:	20 61       	ori	r18, 0x10	; 16
 3d8:	1d c0       	rjmp	.+58     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 3da:	8d 32       	cpi	r24, 0x2D	; 45
 3dc:	61 f0       	breq	.+24     	; 0x3f6 <vfprintf+0xb8>
 3de:	80 33       	cpi	r24, 0x30	; 48
 3e0:	69 f4       	brne	.+26     	; 0x3fc <vfprintf+0xbe>
 3e2:	23 2d       	mov	r18, r3
 3e4:	21 60       	ori	r18, 0x01	; 1
 3e6:	16 c0       	rjmp	.+44     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 3e8:	83 2d       	mov	r24, r3
 3ea:	82 60       	ori	r24, 0x02	; 2
 3ec:	38 2e       	mov	r3, r24
 3ee:	e3 2d       	mov	r30, r3
 3f0:	e4 60       	ori	r30, 0x04	; 4
 3f2:	3e 2e       	mov	r3, r30
 3f4:	2a c0       	rjmp	.+84     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 3f6:	f3 2d       	mov	r31, r3
 3f8:	f8 60       	ori	r31, 0x08	; 8
 3fa:	1d c0       	rjmp	.+58     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 3fc:	37 fc       	sbrc	r3, 7
 3fe:	2d c0       	rjmp	.+90     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 400:	20 ed       	ldi	r18, 0xD0	; 208
 402:	28 0f       	add	r18, r24
 404:	2a 30       	cpi	r18, 0x0A	; 10
 406:	40 f0       	brcs	.+16     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 408:	8e 32       	cpi	r24, 0x2E	; 46
 40a:	b9 f4       	brne	.+46     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 40c:	36 fc       	sbrc	r3, 6
 40e:	75 c1       	rjmp	.+746    	; 0x6fa <__LOCK_REGION_LENGTH__+0x2fa>
 410:	23 2d       	mov	r18, r3
 412:	20 64       	ori	r18, 0x40	; 64
 414:	32 2e       	mov	r3, r18
 416:	19 c0       	rjmp	.+50     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 418:	36 fe       	sbrs	r3, 6
 41a:	06 c0       	rjmp	.+12     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 41c:	8a e0       	ldi	r24, 0x0A	; 10
 41e:	98 9e       	mul	r9, r24
 420:	20 0d       	add	r18, r0
 422:	11 24       	eor	r1, r1
 424:	92 2e       	mov	r9, r18
 426:	11 c0       	rjmp	.+34     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 428:	ea e0       	ldi	r30, 0x0A	; 10
 42a:	2e 9e       	mul	r2, r30
 42c:	20 0d       	add	r18, r0
 42e:	11 24       	eor	r1, r1
 430:	22 2e       	mov	r2, r18
 432:	f3 2d       	mov	r31, r3
 434:	f0 62       	ori	r31, 0x20	; 32
 436:	3f 2e       	mov	r3, r31
 438:	08 c0       	rjmp	.+16     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 43a:	8c 36       	cpi	r24, 0x6C	; 108
 43c:	21 f4       	brne	.+8      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 43e:	83 2d       	mov	r24, r3
 440:	80 68       	ori	r24, 0x80	; 128
 442:	38 2e       	mov	r3, r24
 444:	02 c0       	rjmp	.+4      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 446:	88 36       	cpi	r24, 0x68	; 104
 448:	41 f4       	brne	.+16     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 44a:	f7 01       	movw	r30, r14
 44c:	93 fd       	sbrc	r25, 3
 44e:	85 91       	lpm	r24, Z+
 450:	93 ff       	sbrs	r25, 3
 452:	81 91       	ld	r24, Z+
 454:	7f 01       	movw	r14, r30
 456:	81 11       	cpse	r24, r1
 458:	b3 cf       	rjmp	.-154    	; 0x3c0 <vfprintf+0x82>
 45a:	98 2f       	mov	r25, r24
 45c:	9f 7d       	andi	r25, 0xDF	; 223
 45e:	95 54       	subi	r25, 0x45	; 69
 460:	93 30       	cpi	r25, 0x03	; 3
 462:	28 f4       	brcc	.+10     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 464:	0c 5f       	subi	r16, 0xFC	; 252
 466:	1f 4f       	sbci	r17, 0xFF	; 255
 468:	9f e3       	ldi	r25, 0x3F	; 63
 46a:	99 83       	std	Y+1, r25	; 0x01
 46c:	0d c0       	rjmp	.+26     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 46e:	83 36       	cpi	r24, 0x63	; 99
 470:	31 f0       	breq	.+12     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 472:	83 37       	cpi	r24, 0x73	; 115
 474:	71 f0       	breq	.+28     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 476:	83 35       	cpi	r24, 0x53	; 83
 478:	09 f0       	breq	.+2      	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 47a:	55 c0       	rjmp	.+170    	; 0x526 <__LOCK_REGION_LENGTH__+0x126>
 47c:	20 c0       	rjmp	.+64     	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 47e:	f8 01       	movw	r30, r16
 480:	80 81       	ld	r24, Z
 482:	89 83       	std	Y+1, r24	; 0x01
 484:	0e 5f       	subi	r16, 0xFE	; 254
 486:	1f 4f       	sbci	r17, 0xFF	; 255
 488:	88 24       	eor	r8, r8
 48a:	83 94       	inc	r8
 48c:	91 2c       	mov	r9, r1
 48e:	53 01       	movw	r10, r6
 490:	12 c0       	rjmp	.+36     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 492:	28 01       	movw	r4, r16
 494:	f2 e0       	ldi	r31, 0x02	; 2
 496:	4f 0e       	add	r4, r31
 498:	51 1c       	adc	r5, r1
 49a:	f8 01       	movw	r30, r16
 49c:	a0 80       	ld	r10, Z
 49e:	b1 80       	ldd	r11, Z+1	; 0x01
 4a0:	36 fe       	sbrs	r3, 6
 4a2:	03 c0       	rjmp	.+6      	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 4a4:	69 2d       	mov	r22, r9
 4a6:	70 e0       	ldi	r23, 0x00	; 0
 4a8:	02 c0       	rjmp	.+4      	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 4aa:	6f ef       	ldi	r22, 0xFF	; 255
 4ac:	7f ef       	ldi	r23, 0xFF	; 255
 4ae:	c5 01       	movw	r24, r10
 4b0:	4e d1       	rcall	.+668    	; 0x74e <strnlen>
 4b2:	4c 01       	movw	r8, r24
 4b4:	82 01       	movw	r16, r4
 4b6:	f3 2d       	mov	r31, r3
 4b8:	ff 77       	andi	r31, 0x7F	; 127
 4ba:	3f 2e       	mov	r3, r31
 4bc:	15 c0       	rjmp	.+42     	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4be:	28 01       	movw	r4, r16
 4c0:	22 e0       	ldi	r18, 0x02	; 2
 4c2:	42 0e       	add	r4, r18
 4c4:	51 1c       	adc	r5, r1
 4c6:	f8 01       	movw	r30, r16
 4c8:	a0 80       	ld	r10, Z
 4ca:	b1 80       	ldd	r11, Z+1	; 0x01
 4cc:	36 fe       	sbrs	r3, 6
 4ce:	03 c0       	rjmp	.+6      	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4d0:	69 2d       	mov	r22, r9
 4d2:	70 e0       	ldi	r23, 0x00	; 0
 4d4:	02 c0       	rjmp	.+4      	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4d6:	6f ef       	ldi	r22, 0xFF	; 255
 4d8:	7f ef       	ldi	r23, 0xFF	; 255
 4da:	c5 01       	movw	r24, r10
 4dc:	2d d1       	rcall	.+602    	; 0x738 <strnlen_P>
 4de:	4c 01       	movw	r8, r24
 4e0:	f3 2d       	mov	r31, r3
 4e2:	f0 68       	ori	r31, 0x80	; 128
 4e4:	3f 2e       	mov	r3, r31
 4e6:	82 01       	movw	r16, r4
 4e8:	33 fc       	sbrc	r3, 3
 4ea:	19 c0       	rjmp	.+50     	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 4ec:	82 2d       	mov	r24, r2
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	88 16       	cp	r8, r24
 4f2:	99 06       	cpc	r9, r25
 4f4:	a0 f4       	brcc	.+40     	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 4f6:	b6 01       	movw	r22, r12
 4f8:	80 e2       	ldi	r24, 0x20	; 32
 4fa:	90 e0       	ldi	r25, 0x00	; 0
 4fc:	33 d1       	rcall	.+614    	; 0x764 <fputc>
 4fe:	2a 94       	dec	r2
 500:	f5 cf       	rjmp	.-22     	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 502:	f5 01       	movw	r30, r10
 504:	37 fc       	sbrc	r3, 7
 506:	85 91       	lpm	r24, Z+
 508:	37 fe       	sbrs	r3, 7
 50a:	81 91       	ld	r24, Z+
 50c:	5f 01       	movw	r10, r30
 50e:	b6 01       	movw	r22, r12
 510:	90 e0       	ldi	r25, 0x00	; 0
 512:	28 d1       	rcall	.+592    	; 0x764 <fputc>
 514:	21 10       	cpse	r2, r1
 516:	2a 94       	dec	r2
 518:	21 e0       	ldi	r18, 0x01	; 1
 51a:	82 1a       	sub	r8, r18
 51c:	91 08       	sbc	r9, r1
 51e:	81 14       	cp	r8, r1
 520:	91 04       	cpc	r9, r1
 522:	79 f7       	brne	.-34     	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 524:	e1 c0       	rjmp	.+450    	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 526:	84 36       	cpi	r24, 0x64	; 100
 528:	11 f0       	breq	.+4      	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 52a:	89 36       	cpi	r24, 0x69	; 105
 52c:	39 f5       	brne	.+78     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 52e:	f8 01       	movw	r30, r16
 530:	37 fe       	sbrs	r3, 7
 532:	07 c0       	rjmp	.+14     	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 534:	60 81       	ld	r22, Z
 536:	71 81       	ldd	r23, Z+1	; 0x01
 538:	82 81       	ldd	r24, Z+2	; 0x02
 53a:	93 81       	ldd	r25, Z+3	; 0x03
 53c:	0c 5f       	subi	r16, 0xFC	; 252
 53e:	1f 4f       	sbci	r17, 0xFF	; 255
 540:	08 c0       	rjmp	.+16     	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 542:	60 81       	ld	r22, Z
 544:	71 81       	ldd	r23, Z+1	; 0x01
 546:	07 2e       	mov	r0, r23
 548:	00 0c       	add	r0, r0
 54a:	88 0b       	sbc	r24, r24
 54c:	99 0b       	sbc	r25, r25
 54e:	0e 5f       	subi	r16, 0xFE	; 254
 550:	1f 4f       	sbci	r17, 0xFF	; 255
 552:	f3 2d       	mov	r31, r3
 554:	ff 76       	andi	r31, 0x6F	; 111
 556:	3f 2e       	mov	r3, r31
 558:	97 ff       	sbrs	r25, 7
 55a:	09 c0       	rjmp	.+18     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 55c:	90 95       	com	r25
 55e:	80 95       	com	r24
 560:	70 95       	com	r23
 562:	61 95       	neg	r22
 564:	7f 4f       	sbci	r23, 0xFF	; 255
 566:	8f 4f       	sbci	r24, 0xFF	; 255
 568:	9f 4f       	sbci	r25, 0xFF	; 255
 56a:	f0 68       	ori	r31, 0x80	; 128
 56c:	3f 2e       	mov	r3, r31
 56e:	2a e0       	ldi	r18, 0x0A	; 10
 570:	30 e0       	ldi	r19, 0x00	; 0
 572:	a3 01       	movw	r20, r6
 574:	33 d1       	rcall	.+614    	; 0x7dc <__ultoa_invert>
 576:	88 2e       	mov	r8, r24
 578:	86 18       	sub	r8, r6
 57a:	44 c0       	rjmp	.+136    	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 57c:	85 37       	cpi	r24, 0x75	; 117
 57e:	31 f4       	brne	.+12     	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 580:	23 2d       	mov	r18, r3
 582:	2f 7e       	andi	r18, 0xEF	; 239
 584:	b2 2e       	mov	r11, r18
 586:	2a e0       	ldi	r18, 0x0A	; 10
 588:	30 e0       	ldi	r19, 0x00	; 0
 58a:	25 c0       	rjmp	.+74     	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 58c:	93 2d       	mov	r25, r3
 58e:	99 7f       	andi	r25, 0xF9	; 249
 590:	b9 2e       	mov	r11, r25
 592:	8f 36       	cpi	r24, 0x6F	; 111
 594:	c1 f0       	breq	.+48     	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 596:	18 f4       	brcc	.+6      	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 598:	88 35       	cpi	r24, 0x58	; 88
 59a:	79 f0       	breq	.+30     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 59c:	ae c0       	rjmp	.+348    	; 0x6fa <__LOCK_REGION_LENGTH__+0x2fa>
 59e:	80 37       	cpi	r24, 0x70	; 112
 5a0:	19 f0       	breq	.+6      	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
 5a2:	88 37       	cpi	r24, 0x78	; 120
 5a4:	21 f0       	breq	.+8      	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 5a6:	a9 c0       	rjmp	.+338    	; 0x6fa <__LOCK_REGION_LENGTH__+0x2fa>
 5a8:	e9 2f       	mov	r30, r25
 5aa:	e0 61       	ori	r30, 0x10	; 16
 5ac:	be 2e       	mov	r11, r30
 5ae:	b4 fe       	sbrs	r11, 4
 5b0:	0d c0       	rjmp	.+26     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 5b2:	fb 2d       	mov	r31, r11
 5b4:	f4 60       	ori	r31, 0x04	; 4
 5b6:	bf 2e       	mov	r11, r31
 5b8:	09 c0       	rjmp	.+18     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 5ba:	34 fe       	sbrs	r3, 4
 5bc:	0a c0       	rjmp	.+20     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 5be:	29 2f       	mov	r18, r25
 5c0:	26 60       	ori	r18, 0x06	; 6
 5c2:	b2 2e       	mov	r11, r18
 5c4:	06 c0       	rjmp	.+12     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 5c6:	28 e0       	ldi	r18, 0x08	; 8
 5c8:	30 e0       	ldi	r19, 0x00	; 0
 5ca:	05 c0       	rjmp	.+10     	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5cc:	20 e1       	ldi	r18, 0x10	; 16
 5ce:	30 e0       	ldi	r19, 0x00	; 0
 5d0:	02 c0       	rjmp	.+4      	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5d2:	20 e1       	ldi	r18, 0x10	; 16
 5d4:	32 e0       	ldi	r19, 0x02	; 2
 5d6:	f8 01       	movw	r30, r16
 5d8:	b7 fe       	sbrs	r11, 7
 5da:	07 c0       	rjmp	.+14     	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5dc:	60 81       	ld	r22, Z
 5de:	71 81       	ldd	r23, Z+1	; 0x01
 5e0:	82 81       	ldd	r24, Z+2	; 0x02
 5e2:	93 81       	ldd	r25, Z+3	; 0x03
 5e4:	0c 5f       	subi	r16, 0xFC	; 252
 5e6:	1f 4f       	sbci	r17, 0xFF	; 255
 5e8:	06 c0       	rjmp	.+12     	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5ea:	60 81       	ld	r22, Z
 5ec:	71 81       	ldd	r23, Z+1	; 0x01
 5ee:	80 e0       	ldi	r24, 0x00	; 0
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	0e 5f       	subi	r16, 0xFE	; 254
 5f4:	1f 4f       	sbci	r17, 0xFF	; 255
 5f6:	a3 01       	movw	r20, r6
 5f8:	f1 d0       	rcall	.+482    	; 0x7dc <__ultoa_invert>
 5fa:	88 2e       	mov	r8, r24
 5fc:	86 18       	sub	r8, r6
 5fe:	fb 2d       	mov	r31, r11
 600:	ff 77       	andi	r31, 0x7F	; 127
 602:	3f 2e       	mov	r3, r31
 604:	36 fe       	sbrs	r3, 6
 606:	0d c0       	rjmp	.+26     	; 0x622 <__LOCK_REGION_LENGTH__+0x222>
 608:	23 2d       	mov	r18, r3
 60a:	2e 7f       	andi	r18, 0xFE	; 254
 60c:	a2 2e       	mov	r10, r18
 60e:	89 14       	cp	r8, r9
 610:	58 f4       	brcc	.+22     	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 612:	34 fe       	sbrs	r3, 4
 614:	0b c0       	rjmp	.+22     	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 616:	32 fc       	sbrc	r3, 2
 618:	09 c0       	rjmp	.+18     	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 61a:	83 2d       	mov	r24, r3
 61c:	8e 7e       	andi	r24, 0xEE	; 238
 61e:	a8 2e       	mov	r10, r24
 620:	05 c0       	rjmp	.+10     	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 622:	b8 2c       	mov	r11, r8
 624:	a3 2c       	mov	r10, r3
 626:	03 c0       	rjmp	.+6      	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 628:	b8 2c       	mov	r11, r8
 62a:	01 c0       	rjmp	.+2      	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 62c:	b9 2c       	mov	r11, r9
 62e:	a4 fe       	sbrs	r10, 4
 630:	0f c0       	rjmp	.+30     	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
 632:	fe 01       	movw	r30, r28
 634:	e8 0d       	add	r30, r8
 636:	f1 1d       	adc	r31, r1
 638:	80 81       	ld	r24, Z
 63a:	80 33       	cpi	r24, 0x30	; 48
 63c:	21 f4       	brne	.+8      	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 63e:	9a 2d       	mov	r25, r10
 640:	99 7e       	andi	r25, 0xE9	; 233
 642:	a9 2e       	mov	r10, r25
 644:	09 c0       	rjmp	.+18     	; 0x658 <__LOCK_REGION_LENGTH__+0x258>
 646:	a2 fe       	sbrs	r10, 2
 648:	06 c0       	rjmp	.+12     	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
 64a:	b3 94       	inc	r11
 64c:	b3 94       	inc	r11
 64e:	04 c0       	rjmp	.+8      	; 0x658 <__LOCK_REGION_LENGTH__+0x258>
 650:	8a 2d       	mov	r24, r10
 652:	86 78       	andi	r24, 0x86	; 134
 654:	09 f0       	breq	.+2      	; 0x658 <__LOCK_REGION_LENGTH__+0x258>
 656:	b3 94       	inc	r11
 658:	a3 fc       	sbrc	r10, 3
 65a:	10 c0       	rjmp	.+32     	; 0x67c <__LOCK_REGION_LENGTH__+0x27c>
 65c:	a0 fe       	sbrs	r10, 0
 65e:	06 c0       	rjmp	.+12     	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 660:	b2 14       	cp	r11, r2
 662:	80 f4       	brcc	.+32     	; 0x684 <__LOCK_REGION_LENGTH__+0x284>
 664:	28 0c       	add	r2, r8
 666:	92 2c       	mov	r9, r2
 668:	9b 18       	sub	r9, r11
 66a:	0d c0       	rjmp	.+26     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
 66c:	b2 14       	cp	r11, r2
 66e:	58 f4       	brcc	.+22     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
 670:	b6 01       	movw	r22, r12
 672:	80 e2       	ldi	r24, 0x20	; 32
 674:	90 e0       	ldi	r25, 0x00	; 0
 676:	76 d0       	rcall	.+236    	; 0x764 <fputc>
 678:	b3 94       	inc	r11
 67a:	f8 cf       	rjmp	.-16     	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 67c:	b2 14       	cp	r11, r2
 67e:	18 f4       	brcc	.+6      	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
 680:	2b 18       	sub	r2, r11
 682:	02 c0       	rjmp	.+4      	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
 684:	98 2c       	mov	r9, r8
 686:	21 2c       	mov	r2, r1
 688:	a4 fe       	sbrs	r10, 4
 68a:	0f c0       	rjmp	.+30     	; 0x6aa <__LOCK_REGION_LENGTH__+0x2aa>
 68c:	b6 01       	movw	r22, r12
 68e:	80 e3       	ldi	r24, 0x30	; 48
 690:	90 e0       	ldi	r25, 0x00	; 0
 692:	68 d0       	rcall	.+208    	; 0x764 <fputc>
 694:	a2 fe       	sbrs	r10, 2
 696:	16 c0       	rjmp	.+44     	; 0x6c4 <__LOCK_REGION_LENGTH__+0x2c4>
 698:	a1 fc       	sbrc	r10, 1
 69a:	03 c0       	rjmp	.+6      	; 0x6a2 <__LOCK_REGION_LENGTH__+0x2a2>
 69c:	88 e7       	ldi	r24, 0x78	; 120
 69e:	90 e0       	ldi	r25, 0x00	; 0
 6a0:	02 c0       	rjmp	.+4      	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 6a2:	88 e5       	ldi	r24, 0x58	; 88
 6a4:	90 e0       	ldi	r25, 0x00	; 0
 6a6:	b6 01       	movw	r22, r12
 6a8:	0c c0       	rjmp	.+24     	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 6aa:	8a 2d       	mov	r24, r10
 6ac:	86 78       	andi	r24, 0x86	; 134
 6ae:	51 f0       	breq	.+20     	; 0x6c4 <__LOCK_REGION_LENGTH__+0x2c4>
 6b0:	a1 fe       	sbrs	r10, 1
 6b2:	02 c0       	rjmp	.+4      	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
 6b4:	8b e2       	ldi	r24, 0x2B	; 43
 6b6:	01 c0       	rjmp	.+2      	; 0x6ba <__LOCK_REGION_LENGTH__+0x2ba>
 6b8:	80 e2       	ldi	r24, 0x20	; 32
 6ba:	a7 fc       	sbrc	r10, 7
 6bc:	8d e2       	ldi	r24, 0x2D	; 45
 6be:	b6 01       	movw	r22, r12
 6c0:	90 e0       	ldi	r25, 0x00	; 0
 6c2:	50 d0       	rcall	.+160    	; 0x764 <fputc>
 6c4:	89 14       	cp	r8, r9
 6c6:	30 f4       	brcc	.+12     	; 0x6d4 <__LOCK_REGION_LENGTH__+0x2d4>
 6c8:	b6 01       	movw	r22, r12
 6ca:	80 e3       	ldi	r24, 0x30	; 48
 6cc:	90 e0       	ldi	r25, 0x00	; 0
 6ce:	4a d0       	rcall	.+148    	; 0x764 <fputc>
 6d0:	9a 94       	dec	r9
 6d2:	f8 cf       	rjmp	.-16     	; 0x6c4 <__LOCK_REGION_LENGTH__+0x2c4>
 6d4:	8a 94       	dec	r8
 6d6:	f3 01       	movw	r30, r6
 6d8:	e8 0d       	add	r30, r8
 6da:	f1 1d       	adc	r31, r1
 6dc:	80 81       	ld	r24, Z
 6de:	b6 01       	movw	r22, r12
 6e0:	90 e0       	ldi	r25, 0x00	; 0
 6e2:	40 d0       	rcall	.+128    	; 0x764 <fputc>
 6e4:	81 10       	cpse	r8, r1
 6e6:	f6 cf       	rjmp	.-20     	; 0x6d4 <__LOCK_REGION_LENGTH__+0x2d4>
 6e8:	22 20       	and	r2, r2
 6ea:	09 f4       	brne	.+2      	; 0x6ee <__LOCK_REGION_LENGTH__+0x2ee>
 6ec:	4e ce       	rjmp	.-868    	; 0x38a <vfprintf+0x4c>
 6ee:	b6 01       	movw	r22, r12
 6f0:	80 e2       	ldi	r24, 0x20	; 32
 6f2:	90 e0       	ldi	r25, 0x00	; 0
 6f4:	37 d0       	rcall	.+110    	; 0x764 <fputc>
 6f6:	2a 94       	dec	r2
 6f8:	f7 cf       	rjmp	.-18     	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 6fa:	f6 01       	movw	r30, r12
 6fc:	86 81       	ldd	r24, Z+6	; 0x06
 6fe:	97 81       	ldd	r25, Z+7	; 0x07
 700:	02 c0       	rjmp	.+4      	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
 702:	8f ef       	ldi	r24, 0xFF	; 255
 704:	9f ef       	ldi	r25, 0xFF	; 255
 706:	2b 96       	adiw	r28, 0x0b	; 11
 708:	0f b6       	in	r0, 0x3f	; 63
 70a:	f8 94       	cli
 70c:	de bf       	out	0x3e, r29	; 62
 70e:	0f be       	out	0x3f, r0	; 63
 710:	cd bf       	out	0x3d, r28	; 61
 712:	df 91       	pop	r29
 714:	cf 91       	pop	r28
 716:	1f 91       	pop	r17
 718:	0f 91       	pop	r16
 71a:	ff 90       	pop	r15
 71c:	ef 90       	pop	r14
 71e:	df 90       	pop	r13
 720:	cf 90       	pop	r12
 722:	bf 90       	pop	r11
 724:	af 90       	pop	r10
 726:	9f 90       	pop	r9
 728:	8f 90       	pop	r8
 72a:	7f 90       	pop	r7
 72c:	6f 90       	pop	r6
 72e:	5f 90       	pop	r5
 730:	4f 90       	pop	r4
 732:	3f 90       	pop	r3
 734:	2f 90       	pop	r2
 736:	08 95       	ret

00000738 <strnlen_P>:
 738:	fc 01       	movw	r30, r24
 73a:	05 90       	lpm	r0, Z+
 73c:	61 50       	subi	r22, 0x01	; 1
 73e:	70 40       	sbci	r23, 0x00	; 0
 740:	01 10       	cpse	r0, r1
 742:	d8 f7       	brcc	.-10     	; 0x73a <strnlen_P+0x2>
 744:	80 95       	com	r24
 746:	90 95       	com	r25
 748:	8e 0f       	add	r24, r30
 74a:	9f 1f       	adc	r25, r31
 74c:	08 95       	ret

0000074e <strnlen>:
 74e:	fc 01       	movw	r30, r24
 750:	61 50       	subi	r22, 0x01	; 1
 752:	70 40       	sbci	r23, 0x00	; 0
 754:	01 90       	ld	r0, Z+
 756:	01 10       	cpse	r0, r1
 758:	d8 f7       	brcc	.-10     	; 0x750 <strnlen+0x2>
 75a:	80 95       	com	r24
 75c:	90 95       	com	r25
 75e:	8e 0f       	add	r24, r30
 760:	9f 1f       	adc	r25, r31
 762:	08 95       	ret

00000764 <fputc>:
 764:	0f 93       	push	r16
 766:	1f 93       	push	r17
 768:	cf 93       	push	r28
 76a:	df 93       	push	r29
 76c:	fb 01       	movw	r30, r22
 76e:	23 81       	ldd	r18, Z+3	; 0x03
 770:	21 fd       	sbrc	r18, 1
 772:	03 c0       	rjmp	.+6      	; 0x77a <fputc+0x16>
 774:	8f ef       	ldi	r24, 0xFF	; 255
 776:	9f ef       	ldi	r25, 0xFF	; 255
 778:	2c c0       	rjmp	.+88     	; 0x7d2 <fputc+0x6e>
 77a:	22 ff       	sbrs	r18, 2
 77c:	16 c0       	rjmp	.+44     	; 0x7aa <fputc+0x46>
 77e:	46 81       	ldd	r20, Z+6	; 0x06
 780:	57 81       	ldd	r21, Z+7	; 0x07
 782:	24 81       	ldd	r18, Z+4	; 0x04
 784:	35 81       	ldd	r19, Z+5	; 0x05
 786:	42 17       	cp	r20, r18
 788:	53 07       	cpc	r21, r19
 78a:	44 f4       	brge	.+16     	; 0x79c <fputc+0x38>
 78c:	a0 81       	ld	r26, Z
 78e:	b1 81       	ldd	r27, Z+1	; 0x01
 790:	9d 01       	movw	r18, r26
 792:	2f 5f       	subi	r18, 0xFF	; 255
 794:	3f 4f       	sbci	r19, 0xFF	; 255
 796:	31 83       	std	Z+1, r19	; 0x01
 798:	20 83       	st	Z, r18
 79a:	8c 93       	st	X, r24
 79c:	26 81       	ldd	r18, Z+6	; 0x06
 79e:	37 81       	ldd	r19, Z+7	; 0x07
 7a0:	2f 5f       	subi	r18, 0xFF	; 255
 7a2:	3f 4f       	sbci	r19, 0xFF	; 255
 7a4:	37 83       	std	Z+7, r19	; 0x07
 7a6:	26 83       	std	Z+6, r18	; 0x06
 7a8:	14 c0       	rjmp	.+40     	; 0x7d2 <fputc+0x6e>
 7aa:	8b 01       	movw	r16, r22
 7ac:	ec 01       	movw	r28, r24
 7ae:	fb 01       	movw	r30, r22
 7b0:	00 84       	ldd	r0, Z+8	; 0x08
 7b2:	f1 85       	ldd	r31, Z+9	; 0x09
 7b4:	e0 2d       	mov	r30, r0
 7b6:	09 95       	icall
 7b8:	89 2b       	or	r24, r25
 7ba:	e1 f6       	brne	.-72     	; 0x774 <fputc+0x10>
 7bc:	d8 01       	movw	r26, r16
 7be:	16 96       	adiw	r26, 0x06	; 6
 7c0:	8d 91       	ld	r24, X+
 7c2:	9c 91       	ld	r25, X
 7c4:	17 97       	sbiw	r26, 0x07	; 7
 7c6:	01 96       	adiw	r24, 0x01	; 1
 7c8:	17 96       	adiw	r26, 0x07	; 7
 7ca:	9c 93       	st	X, r25
 7cc:	8e 93       	st	-X, r24
 7ce:	16 97       	sbiw	r26, 0x06	; 6
 7d0:	ce 01       	movw	r24, r28
 7d2:	df 91       	pop	r29
 7d4:	cf 91       	pop	r28
 7d6:	1f 91       	pop	r17
 7d8:	0f 91       	pop	r16
 7da:	08 95       	ret

000007dc <__ultoa_invert>:
 7dc:	fa 01       	movw	r30, r20
 7de:	aa 27       	eor	r26, r26
 7e0:	28 30       	cpi	r18, 0x08	; 8
 7e2:	51 f1       	breq	.+84     	; 0x838 <__ultoa_invert+0x5c>
 7e4:	20 31       	cpi	r18, 0x10	; 16
 7e6:	81 f1       	breq	.+96     	; 0x848 <__ultoa_invert+0x6c>
 7e8:	e8 94       	clt
 7ea:	6f 93       	push	r22
 7ec:	6e 7f       	andi	r22, 0xFE	; 254
 7ee:	6e 5f       	subi	r22, 0xFE	; 254
 7f0:	7f 4f       	sbci	r23, 0xFF	; 255
 7f2:	8f 4f       	sbci	r24, 0xFF	; 255
 7f4:	9f 4f       	sbci	r25, 0xFF	; 255
 7f6:	af 4f       	sbci	r26, 0xFF	; 255
 7f8:	b1 e0       	ldi	r27, 0x01	; 1
 7fa:	3e d0       	rcall	.+124    	; 0x878 <__ultoa_invert+0x9c>
 7fc:	b4 e0       	ldi	r27, 0x04	; 4
 7fe:	3c d0       	rcall	.+120    	; 0x878 <__ultoa_invert+0x9c>
 800:	67 0f       	add	r22, r23
 802:	78 1f       	adc	r23, r24
 804:	89 1f       	adc	r24, r25
 806:	9a 1f       	adc	r25, r26
 808:	a1 1d       	adc	r26, r1
 80a:	68 0f       	add	r22, r24
 80c:	79 1f       	adc	r23, r25
 80e:	8a 1f       	adc	r24, r26
 810:	91 1d       	adc	r25, r1
 812:	a1 1d       	adc	r26, r1
 814:	6a 0f       	add	r22, r26
 816:	71 1d       	adc	r23, r1
 818:	81 1d       	adc	r24, r1
 81a:	91 1d       	adc	r25, r1
 81c:	a1 1d       	adc	r26, r1
 81e:	20 d0       	rcall	.+64     	; 0x860 <__ultoa_invert+0x84>
 820:	09 f4       	brne	.+2      	; 0x824 <__ultoa_invert+0x48>
 822:	68 94       	set
 824:	3f 91       	pop	r19
 826:	2a e0       	ldi	r18, 0x0A	; 10
 828:	26 9f       	mul	r18, r22
 82a:	11 24       	eor	r1, r1
 82c:	30 19       	sub	r19, r0
 82e:	30 5d       	subi	r19, 0xD0	; 208
 830:	31 93       	st	Z+, r19
 832:	de f6       	brtc	.-74     	; 0x7ea <__ultoa_invert+0xe>
 834:	cf 01       	movw	r24, r30
 836:	08 95       	ret
 838:	46 2f       	mov	r20, r22
 83a:	47 70       	andi	r20, 0x07	; 7
 83c:	40 5d       	subi	r20, 0xD0	; 208
 83e:	41 93       	st	Z+, r20
 840:	b3 e0       	ldi	r27, 0x03	; 3
 842:	0f d0       	rcall	.+30     	; 0x862 <__ultoa_invert+0x86>
 844:	c9 f7       	brne	.-14     	; 0x838 <__ultoa_invert+0x5c>
 846:	f6 cf       	rjmp	.-20     	; 0x834 <__ultoa_invert+0x58>
 848:	46 2f       	mov	r20, r22
 84a:	4f 70       	andi	r20, 0x0F	; 15
 84c:	40 5d       	subi	r20, 0xD0	; 208
 84e:	4a 33       	cpi	r20, 0x3A	; 58
 850:	18 f0       	brcs	.+6      	; 0x858 <__ultoa_invert+0x7c>
 852:	49 5d       	subi	r20, 0xD9	; 217
 854:	31 fd       	sbrc	r19, 1
 856:	40 52       	subi	r20, 0x20	; 32
 858:	41 93       	st	Z+, r20
 85a:	02 d0       	rcall	.+4      	; 0x860 <__ultoa_invert+0x84>
 85c:	a9 f7       	brne	.-22     	; 0x848 <__ultoa_invert+0x6c>
 85e:	ea cf       	rjmp	.-44     	; 0x834 <__ultoa_invert+0x58>
 860:	b4 e0       	ldi	r27, 0x04	; 4
 862:	a6 95       	lsr	r26
 864:	97 95       	ror	r25
 866:	87 95       	ror	r24
 868:	77 95       	ror	r23
 86a:	67 95       	ror	r22
 86c:	ba 95       	dec	r27
 86e:	c9 f7       	brne	.-14     	; 0x862 <__ultoa_invert+0x86>
 870:	00 97       	sbiw	r24, 0x00	; 0
 872:	61 05       	cpc	r22, r1
 874:	71 05       	cpc	r23, r1
 876:	08 95       	ret
 878:	9b 01       	movw	r18, r22
 87a:	ac 01       	movw	r20, r24
 87c:	0a 2e       	mov	r0, r26
 87e:	06 94       	lsr	r0
 880:	57 95       	ror	r21
 882:	47 95       	ror	r20
 884:	37 95       	ror	r19
 886:	27 95       	ror	r18
 888:	ba 95       	dec	r27
 88a:	c9 f7       	brne	.-14     	; 0x87e <__ultoa_invert+0xa2>
 88c:	62 0f       	add	r22, r18
 88e:	73 1f       	adc	r23, r19
 890:	84 1f       	adc	r24, r20
 892:	95 1f       	adc	r25, r21
 894:	a0 1d       	adc	r26, r0
 896:	08 95       	ret

00000898 <_exit>:
 898:	f8 94       	cli

0000089a <__stop_program>:
 89a:	ff cf       	rjmp	.-2      	; 0x89a <__stop_program>
